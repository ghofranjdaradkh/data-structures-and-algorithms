/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package challenge8;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class LibraryTest {
    @Test
    void testNormalCase() {
        //Arrange
        linkedListZip list1 = new linkedListZip();
        list1.append(1);
        list1.append(3);
        list1.append(5);

        linkedListZip list2 = new linkedListZip();
        list2.append(2);
        list2.append(4);
        list2.append(6);

        linkedListZip zippedList = new linkedListZip();
        //Act
        zippedList.head = list1.zipLists(list1.head, list2.head);

        // Assert
        assertEquals("1 -> 2 -> 3 -> 4 -> 5 -> 6", zippedList.toString());
    }


    @Test
    void testEmpty() {
        //Arrange
        linkedListZip list1 = new linkedListZip();


        linkedListZip list2 = new linkedListZip();
      ;

        linkedListZip zippedList = new linkedListZip();
        //Act
        zippedList.head = list1.zipLists(list1.head, list2.head);

        // Assert
        assertEquals("", zippedList.toString());
    }

    @Test
    void testOnewithValuesOneEmpty() {
        //Arrange
        linkedListZip list1 = new linkedListZip();
        list1.append(1);
        list1.append(2);
        list1.append(3);

        linkedListZip list2 = new linkedListZip();


        linkedListZip zippedList = new linkedListZip();
        //Act
        zippedList.head = list1.zipLists(list1.head, list2.head);

        // Assert
        assertEquals("1 -> 2 -> 3", zippedList.toString());
    }
@Test
    void testList1HasMoreThanList2() {
        //Arrange
        linkedListZip list1 = new linkedListZip();
        list1.append(1);
        list1.append(2);
        list1.append(3);

        linkedListZip list2 = new linkedListZip();
    list2.append(7);
    list2.append(8);


        linkedListZip zippedList = new linkedListZip();
        //Act
        zippedList.head = list1.zipLists(list1.head, list2.head);

        // Assert
        assertEquals("1 -> 7 -> 2 -> 8 -> 3", zippedList.toString());
    }

    @Test
    void testList2HasMoreThanList1() {
        //Arrange
        linkedListZip list1 = new linkedListZip();
        list1.append(1);
        list1.append(3);


        linkedListZip list2 = new linkedListZip();
        list2.append(2);
        list2.append(4);
        list2.append(5);


        linkedListZip zippedList = new linkedListZip();
        //Act
        zippedList.head = list1.zipLists(list1.head, list2.head);

        // Assert
        assertEquals("1 -> 2 -> 3 -> 4 -> 5", zippedList.toString());
    }

}






